{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/VICTUS/Downloads/portofolio/portofolio/src/app/api/chat/route.js"],"sourcesContent":["// src/app/api/chat/route.js\r\nimport { NextResponse } from \"next/server\";\r\n\r\nexport async function POST(req) {\r\n  try {\r\n    const { message } = await req.json();\r\n\r\n    const res = await fetch(\r\n      \"https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=\" +\r\n        process.env.GEMINI_API_KEY,\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          contents: [{ role: \"user\", parts: [{ text: message }] }],\r\n        }),\r\n      }\r\n    );\r\n\r\n    const data = await res.json();\r\n\r\n    const reply =\r\n      data?.candidates?.[0]?.content?.parts?.[0]?.text ||\r\n      \"⚠️ No reply from AI\";\r\n\r\n    return NextResponse.json({ reply });\r\n  } catch (err) {\r\n    return NextResponse.json(\r\n      { reply: \"⚠️ Error: \" + err.message },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,4BAA4B;;;;;AAC5B;;AAEO,eAAe,KAAK,GAAG;IAC5B,IAAI;QACF,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,IAAI,IAAI;QAElC,MAAM,MAAM,MAAM,MAChB,kGACE,QAAQ,GAAG,CAAC,cAAc,EAC5B;YACE,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBACnB,UAAU;oBAAC;wBAAE,MAAM;wBAAQ,OAAO;4BAAC;gCAAE,MAAM;4BAAQ;yBAAE;oBAAC;iBAAE;YAC1D;QACF;QAGF,MAAM,OAAO,MAAM,IAAI,IAAI;QAE3B,MAAM,QACJ,MAAM,YAAY,CAAC,EAAE,EAAE,SAAS,OAAO,CAAC,EAAE,EAAE,QAC5C;QAEF,OAAO,yLAAY,CAAC,IAAI,CAAC;YAAE;QAAM;IACnC,EAAE,OAAO,KAAK;QACZ,OAAO,yLAAY,CAAC,IAAI,CACtB;YAAE,OAAO,eAAe,IAAI,OAAO;QAAC,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}